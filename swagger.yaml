openapi: 3.0.0
info:
  title: Ticketing System API
  version: 1.0.0
  description: API for managing users, events, and passes in a ticketing system
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input

  /users/{id}:
    get:
      summary: Get a user by ID
      description: Returns a single user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

  /events:
    get:
      summary: Get all events
      description: Returns a list of all events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create a new event
      description: Creates a new event in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created successfully
        '400':
          description: Invalid input

  /events/{id}:
    get:
      summary: Get an event by ID
      description: Returns a single event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

  /passes/generate:
    post:
      summary: Generate a virtual pass
      description: Generates a virtual pass image with user and event details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                  description: Name of the user
                eventName:
                  type: string
                  description: Name of the event
                eventDate:
                  type: string
                  format: date
                  description: Date of the event
                passCategory:
                  type: string
                  description: Category of the pass
              required:
                - userName
                - eventName
                - eventDate
                - passCategory
      responses:
        '200':
          description: Successfully generated pass image
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error

  /passes/send:
    post:
      summary: Send pass via WhatsApp
      description: Sends a generated pass to a user via WhatsApp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  description: User's phone number in international format
                userName:
                  type: string
                  description: Name of the user
                eventName:
                  type: string
                  description: Name of the event
                eventDate:
                  type: string
                  format: date
                  description: Date of the event
                passCategory:
                  type: string
                  description: Category of the pass
              required:
                - phoneNumber
                - userName
                - eventName
                - eventDate
                - passCategory
      responses:
        '200':
          description: Pass successfully sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error

  /passes/send-batch:
    post:
      summary: Send passes to multiple users
      description: Sends passes to all users of an event with random delays between sends
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  description: ID of the event
              required:
                - eventId
      responses:
        '200':
          description: Batch sending completed
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    success:
                      type: boolean
                    error:
                      type: string
                      nullable: true
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - name
        - email
        - phone

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        date:
          type: string
          format: date
        location:
          type: string
      required:
        - name
        - date
        - location